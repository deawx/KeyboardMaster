(() => { function r(e, i) { return e.split(i).map(n => { let t = n; return n.toLowerCase() == "ctrl" && (t = "Control"), n.toLowerCase() == "shift" && (t = "Shift"), t }).join(i) } HTMLElement.prototype.addKeyBindings = function (e) { this.pressed = new Set, this.keyBindings = e, e.seperator = e.seperator != null ? e.seperator : " + ", this.checkKeyBinding = function (i) { let n = Array.from(this.pressed); this.keyBindings.bindings.forEach(t => { n.join(e.seperator).toLowerCase() === r(t.keyBinding, e.seperator).toLowerCase() && t.action(i) }) }, this.onkeyup = i => { this.pressed.delete(i.key) }, this.onkeydown = i => { this.pressed.add(i.key), this.checkKeyBinding() }, console.log("bindings added for ", this) }; HTMLElement.prototype.removeAllKeyBindings = function () { console.log(this), this.keyBindings.bindings = [] }; })();
